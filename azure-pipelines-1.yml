trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  terraformCloudToken: $(terraformCloudToken)
  AZURE_SUBSCRIPTION_ID: $(azureSubscriptionId)
  AZURE_CLIENT_ID: $(azureClientId)
  AZURE_CLIENT_SECRET: $(azureClientSecret)
  AZURE_TENANT_ID: $(azureTenantId)

jobs:
  - job: Destroy
    displayName: "Destroy Terraform Resources"
    steps:
      - checkout: self

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.x'
          addToPath: true

      - script: |
          python -m pip install --upgrade pip
          pip install terraform
          terraform -version
        displayName: 'Install Terraform'

      - script: |
          if ! command -v az &> /dev/null; then
            curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          fi
        displayName: 'Install Azure CLI if not present'

      - script: |
          echo "Token: $(terraformCloudToken)"  # Print full token for verification
          mkdir -p ~/.terraform.d
          echo "{\"credentials\":{\"app.terraform.io\":{\"token\":\"$(terraformCloudToken)\"}}}" > ~/.terraform.d/credentials.tfrc.json
          cat ~/.terraform.d/credentials.tfrc.json  # Print credentials file for verification
          terraform init
        displayName: 'Terraform Init'
        env:
          TERRAFORM_CLOUD_TOKEN: $(terraformCloudToken)

      - script: |
          terraform destroy -auto-approve
        displayName: 'Terraform Destroy'
        env:
          ARM_CLIENT_ID: $(azureClientId)
          ARM_CLIENT_SECRET: $(azureClientSecret)
          ARM_SUBSCRIPTION_ID: $(azureSubscriptionId)
          ARM_TENANT_ID: $(azureTenantId)
