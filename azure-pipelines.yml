trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  terraformCloudToken: $(terraformCloudToken)
  AZURE_SUBSCRIPTION_ID: $(azureSubscriptionId)
  AZURE_CLIENT_ID: $(azureClientId)
  AZURE_CLIENT_SECRET: $(azureClientSecret)
  AZURE_TENANT_ID: $(azureTenantId)

steps:
  - checkout: self

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'
      addToPath: true

  - script: |
      python -m pip install --upgrade pip
      pip install terraform
      terraform -version
    displayName: 'Install Terraform'

  - script: |
      if ! command -v az &> /dev/null; then
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
      fi
    displayName: 'Install Azure CLI if not present'

  - script: |
      export TOKEN=$(terraformCloudToken)
      echo "{\"credentials\":{\"app.terraform.io\":{\"token\":\"$TOKEN\"}}}" > ~/.terraform.d/credentials.tfrc.json
      cat ~/.terraform.d/credentials.tfrc.json  # Print credentials file for verification
      terraform init
    displayName: 'Terraform Init'

  - script: |
      terraform plan -out=tfplan
    displayName: 'Terraform Plan'

  - script: |
      terraform apply -input=false tfplan
    displayName: 'Terraform Apply'
    env:
      ARM_CLIENT_ID: $(azureClientId)
      ARM_CLIENT_SECRET: $(azureClientSecret)
      ARM_SUBSCRIPTION_ID: $(azureSubscriptionId)
      ARM_TENANT_ID: $(azureTenantId)
